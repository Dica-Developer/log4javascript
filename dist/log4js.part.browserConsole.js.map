{"version":3,"file":"log4js.part.browserConsole.js","sources":["log4js.helper.js","log4js.level.js","log4js.eventSupport.js","log4js.logger.js","log4js.core.js","log4js.layout.js","log4js.simpleDateFormat.js","log4js.layout.pattern.js","log4js.appender.js","log4js.layout.null.js","log4js.appender.browserConsole.js","log4js.part.browserConsole.js"],"names":[],"mappings":"CAAA,WACA,YACA,QAAA,mBAAA,WAOA,GAAA,GAAA,YA4GA,OAzGA,GAAA,WACA,YAAA,SAAA,GACA,MAAA,UAAA,GAEA,eAAA,SAAA,GACA,OAAA,KAAA,YAAA,IAEA,WAAA,SAAA,GACA,MAAA,kBAAA,IAEA,UAAA,SAAA,GACA,MAAA,iBAAA,IAEA,UAAA,SAAA,GACA,MAAA,SAAA,IAEA,SAAA,SAAA,GACA,MAAA,gBAAA,IAEA,SAAA,SAAA,GACA,MAAA,IAAA,EAAA,SAAA,EAAA,WAAA,OAAA,IAEA,QAAA,SAAA,GACA,MAAA,aAAA,QAEA,cAAA,SAAA,EAAA,GAEA,IAAA,GADA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,CACA,GAAA,CACA,OAGA,MAAA,IAEA,YAAA,SAAA,EAAA,GAEA,IAAA,GADA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,CACA,EAAA,OAAA,EAAA,GACA,GAAA,CACA,OAIA,MAAA,IAEA,KAAA,SAAA,GACA,MAAA,GAAA,QAAA,OAAA,IAAA,QAAA,OAAA,KAEA,eAAA,SAAA,GAEA,GAAA,GAAA,EAAA,QAAA,QAAA,MAAA,QAAA,MAAA,KACA,OAAA,GAAA,MAAA,OAEA,oBAAA,SAAA,GACA,GAAA,GAAA,EAQA,OANA,GADA,EAAA,QACA,EAAA,QACA,EAAA,YACA,EAAA,YAEA,KAAA,SAAA,IAIA,eAAA,SAAA,GACA,GAAA,GAAA,KAAA,IAAA,EAAA,YAAA,KAAA,EAAA,YAAA,MACA,OAAA,GAAA,OAAA,EAAA,IAEA,YAAA,SAAA,GACA,OAAA,MAAA,IAEA,uBAAA,SAAA,EAAA,GACA,MAAA,MAAA,YAAA,GAAA,EAAA,OAAA,IAEA,wBAAA,SAAA,EAAA,GACA,MAAA,MAAA,YAAA,GAAA,EAAA,KAAA,UAAA,IAEA,sBAAA,SAAA,GACA,GAAA,EAAA,CACA,GAAA,GAAA,cAAA,KAAA,oBAAA,EACA,KACA,EAAA,aACA,GAAA,mBAAA,EAAA,YAEA,EAAA,WACA,GAAA,YAAA,KAAA,eAAA,EAAA,WAEA,MAAA,GACA,KAAA,YAAA,wDAKA,MAAA,GAEA,MAAA,OAEA,oBAAA,cACA,kBAAA,YACA,eAAA,SACA,eAAA,OACA,QAAA,QAEA,GAAA,KCpHA,OAAA,kBAAA,WAWA,QAAA,GAAA,EAAA,GACA,KAAA,MAAA,EACA,KAAA,KAAA,EA4EA,MArEA,GAAA,UAAA,SAAA,WACA,MAAA,MAAA,MAQA,EAAA,UAAA,OAAA,SAAA,GACA,MAAA,MAAA,QAAA,EAAA,OAQA,EAAA,UAAA,iBAAA,SAAA,GACA,MAAA,MAAA,OAAA,EAAA,OAOA,EAAA,IAAA,GAAA,GAAA,OAAA,UAAA,OAKA,EAAA,MAAA,GAAA,GAAA,IAAA,SAKA,EAAA,MAAA,GAAA,GAAA,IAAA,SAKA,EAAA,KAAA,GAAA,GAAA,IAAA,QAKA,EAAA,KAAA,GAAA,GAAA,IAAA,QAKA,EAAA,MAAA,GAAA,GAAA,IAAA,SAKA,EAAA,MAAA,GAAA,GAAA,IAAA,SAKA,EAAA,IAAA,GAAA,GAAA,OAAA,UAAA,OAMA,EAAA,0BAAA,EAAA,MAEA,ICzFA,OAAA,uBAAA,iBAAA,SAAA,GAOA,QAAA,KACA,KAAA,cACA,KAAA,kBAqEA,MA9DA,GAAA,UAAA,cAAA,SAAA,GACA,GAAA,EAAA,QAAA,GAAA,CACA,KAAA,WAAA,EACA,KAAA,iBACA,KAAA,GAAA,GAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,KAAA,eAAA,KAAA,WAAA,WAGA,GAAA,YAAA,iBAAA,KAAA,4DASA,EAAA,UAAA,iBAAA,SAAA,EAAA,GACA,EAAA,WAAA,GACA,EAAA,cAAA,KAAA,WAAA,GAGA,KAAA,eAAA,GAAA,KAAA,GAFA,EAAA,YAAA,iBAAA,KAAA,yCAAA,EAAA,KAKA,EAAA,YAAA,iBAAA,KAAA,qDASA,EAAA,UAAA,oBAAA,SAAA,EAAA,GACA,EAAA,WAAA,GACA,EAAA,cAAA,KAAA,WAAA,GAGA,EAAA,YAAA,KAAA,eAAA,GAAA,GAFA,EAAA,YAAA,iBAAA,KAAA,4CAAA,EAAA,KAKA,EAAA,YAAA,iBAAA,KAAA,wDASA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,GAAA,EAAA,cAAA,KAAA,WAAA,GAEA,IAAA,GADA,GAAA,KAAA,eAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,KAAA,EAAA,OAGA,GAAA,YAAA,iBAAA,KAAA,sCAAA,EAAA,MAIA,IC9EA,OAAA,iBAAA,gBAAA,gBAAA,SAAA,EAAA,GAYA,QAAA,GAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,MAAA,EAAA,YAAA,GAAA,EAAA,KAAA,EACA,KAAA,MAAA,GAAA,MAwEA,QAAA,GAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,OAAA,KACA,KAAA,WAEA,IAAA,MACA,EAAA,KACA,EAAA,KAAA,OAAA,EAAA,eACA,EAAA,KAAA,OAAA,EAAA,eAEA,EAAA,KACA,GAAA,CAMA,MAAA,SAAA,SAAA,GACA,KAAA,SAAA,KAAA,GACA,EAAA,OAAA,KACA,EAAA,0BAIA,IAAA,IAAA,CAKA,MAAA,cAAA,WACA,MAAA,IAOA,KAAA,cAAA,SAAA,GACA,GAAA,GAAA,IAAA,CACA,GAAA,EACA,GACA,KAAA,2BAQA,KAAA,YAAA,SAAA,GACA,EACA,EAAA,YAAA,sEAEA,YAAA,GAAA,SACA,EAAA,cAAA,EAAA,KACA,EAAA,KAAA,GACA,EAAA,iBAAA,MACA,KAAA,2BAGA,EAAA,YAAA,2CAAA,EAAA,SAAA,GAAA,qCASA,KAAA,eAAA,SAAA,GACA,EAAA,YAAA,EAAA,GACA,EAAA,qBAAA,MACA,KAAA,2BAMA,KAAA,mBAAA,WACA,GAAA,GAAA,EAAA,MACA,IAAA,EAAA,EAAA,CACA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,qBAAA,KAEA,GAAA,OAAA,EACA,KAAA,4BAQA,KAAA,sBAAA,WACA,GAAA,OAAA,GAAA,EAAA,CAEA,GAAA,GAAA,IAAA,KAAA,mBACA,KAAA,OAAA,uBACA,GAAA,EAAA,OAAA,GACA,GAAA,EAEA,MAAA,IAMA,KAAA,wBAAA,WACA,GAAA,CACA,KAAA,GAAA,GAAA,EAAA,EAAA,KAAA,SAAA,OAAA,EAAA,EAAA,IACA,KAAA,SAAA,GAAA,2BASA,KAAA,IAAA,SAAA,EAAA,GACA,GAAA,EAAA,aAAA,EAAA,iBAAA,KAAA,qBAAA,CAEA,GAAA,GACA,EAAA,EAAA,OAAA,EACA,EAAA,EAAA,EACA,GAAA,OAAA,GAAA,YAAA,SACA,EAAA,EACA,IAKA,KAAA,GADA,MACA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAGA,IAAA,GAAA,GAAA,GACA,KAAA,GAAA,MAAA,EAAA,EAAA,EAEA,MAAA,cAAA,KAQA,KAAA,cAAA,SAAA,GAEA,IAAA,GADA,GAAA,KAAA,wBACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,SAAA,IAQA,KAAA,SAAA,SAAA,GAEA,GAAA,OAAA,EACA,EAAA,YAAA,wEACA,YAAA,GACA,EAAA,EAEA,EAAA,YAAA,6CAAA,KAAA,KAAA,wCAQA,KAAA,SAAA,WACA,MAAA,IAOA,KAAA,kBAAA,WAEA,IAAA,GADA,GACA,EAAA,KAAA,OAAA,IACA,EAAA,EAAA,WACA,OAAA,GAFA,EAAA,EAAA,QAMA,MAAA,IAQA,KAAA,MAAA,SAAA,EAAA,GACA,GAAA,EAAA,YAEA,IAAA,GADA,GAAA,KAAA,wBACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,MAAA,EAAA,IAQA,KAAA,SAAA,WACA,GAAA,EAAA,YAEA,IAAA,GADA,GAAA,KAAA,wBACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,WAKA,IAAA,KAOA,MAAA,KAAA,SAAA,EAAA,GACA,EAAA,cACA,EAAA,YAAA,GACA,EAAA,YAAA,uDACA,GAAA,YAAA,GAGA,EAAA,GAAA,GAAA,GAAA,EAAA,GAFA,EAAA,YAAA,wCAAA,EAAA,iDAWA,KAAA,QAAA,SAAA,GACA,GAAA,EAAA,YACA,GAAA,EAAA,YAAA,GACA,EAAA,YAAA,6DACA,IAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,gBACA,MAAA,IAAA,EAAA,OAAA,SAAA,EAAA,SAAA,GAAA,iBAAA,EAAA,aACA,GAAA,OAEA,GAAA,YAAA,4CAAA,IASA,KAAA,OAAA,SAAA,GACA,GAAA,EAAA,cAAA,EAAA,CAEA,IAAA,GADA,MACA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IACA,EAAA,KAAA,UAAA,GAEA,GAAA,EAAA,OAAA,EAAA,GAAA,qBACA,EAAA,KAAA,EAAA,SACA,EAAA,KAAA,GACA,KAAA,IAAA,EAAA,MAAA,KAQA,KAAA,SAAA,WACA,MAAA,UAAA,KAAA,KAAA,KAvVA,EAAA,UAAA,eAAA,WACA,OAAA,GAAA,OAAA,UAAA,KAAA,MAAA,UAoBA,IAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,OAAA,EACA,KAAA,UAAA,EACA,KAAA,wBAAA,EAAA,UACA,KAAA,mBAAA,KAAA,MAAA,KAAA,wBAAA,KACA,KAAA,aAAA,KAAA,UAAA,kBACA,KAAA,MAAA,EACA,KAAA,SAAA,EACA,KAAA,UAAA,EAscA,OA/bA,GAAA,UAAA,mBAAA,WACA,MAAA,MAAA,UAAA,EAAA,sBAAA,KAAA,WAAA,IAOA,EAAA,UAAA,oBAAA,WACA,MAAA,KAAA,KAAA,SAAA,OAAA,KAAA,SAAA,GACA,KAAA,SAAA,KAAA,EAAA,UAOA,EAAA,UAAA,SAAA,WACA,MAAA,gBAAA,KAAA,MAAA,KAwSA,EAAA,UAAA,MAAA,WACA,KAAA,IAAA,EAAA,MAAA,YAMA,EAAA,UAAA,MAAA,WACA,KAAA,IAAA,EAAA,MAAA,YAMA,EAAA,UAAA,KAAA,WACA,KAAA,IAAA,EAAA,KAAA,YAMA,EAAA,UAAA,KAAA,WACA,KAAA,IAAA,EAAA,KAAA,YAMA,EAAA,UAAA,MAAA,WACA,KAAA,IAAA,EAAA,MAAA,YAMA,EAAA,UAAA,MAAA,WACA,KAAA,IAAA,EAAA,MAAA,YAQA,EAAA,UAAA,aAAA,SAAA,GACA,MAAA,GAAA,iBAAA,KAAA,sBAOA,EAAA,UAAA,eAAA,WACA,MAAA,MAAA,aAAA,EAAA,QAOA,EAAA,UAAA,eAAA,WACA,MAAA,MAAA,aAAA,EAAA,QAOA,EAAA,UAAA,cAAA,WACA,MAAA,MAAA,aAAA,EAAA,OAOA,EAAA,UAAA,cAAA,WACA,MAAA,MAAA,aAAA,EAAA,OAOA,EAAA,UAAA,eAAA,WACA,MAAA,MAAA,aAAA,EAAA,QAOA,EAAA,UAAA,eAAA,WACA,MAAA,MAAA,aAAA,EAAA,QAOA,EAAA,UAAA,MAAA,cAAA,EAKA,EAAA,UAAA,MAAA,cAAA,EAKA,EAAA,UAAA,KAAA,cAAA,EAKA,EAAA,UAAA,KAAA,cAAA,EAKA,EAAA,UAAA,MAAA,cAAA,EAKA,EAAA,UAAA,MAAA,cAAA,EAMA,EAAA,aAAA,EAEA,ICzfA,OAAA,eACA,gBACA,eACA,sBACA,iBACA,SAAA,OAAA,MAAA,aAAA,QAcA,QAAA,UACA,KAAA,QAAA,QACA,KAAA,SAAA,EACA,KAAA,iBAAA,EACA,KAAA,qBAAA,GAAA,MACA,KAAA,gBAhBA,GAAA,YACA,eACA,cAAA,KACA,WAAA,IAoBA,QAAA,UAAA,GAAA,cAKA,OAAA,UAAA,cAAA,WACA,WAAA,GAAA,QAAA,OAAA,eAAA,MACA,WAAA,SAAA,MAAA,4BAOA,OAAA,UAAA,WAAA,SAAA,GACA,KAAA,QAAA,OAAA,UAAA,IAOA,OAAA,UAAA,UAAA,WACA,MAAA,MAAA,SAGA,OAAA,UAAA,6BAAA,EAMA,OAAA,UAAA,4BAAA,SAAA,GACA,KAAA,4BAAA,OAAA,UAAA,IAOA,OAAA,UAAA,2BAAA,WACA,MAAA,MAAA,6BASA,OAAA,UAAA,YAAA,SAAA,MAEA,MAAA,MAAA,OAOA,OAAA,UAAA,mBAAA,SAAA,GACA,KAAA,gBAAA,OAAA,UAAA,IAOA,OAAA,UAAA,cAAA,WACA,MAAA,aAQA,OAAA,UAAA,UAAA,SAAA,GAiBA,GAfA,OAAA,SAAA,KACA,OAAA,YACA,WAAA,KAAA,wCACA,EACA,yCAEA,EAAA,OAAA,qBAIA,IAAA,OAAA,gBACA,OAAA,YAAA,WAAA,KAAA,0DAIA,QAAA,GAAA,CACA,GAAA,GAAA,GAAA,QAAA,EAAA,KACA,SAAA,GAAA,EACA,YAAA,KAAA,EAGA,IACA,GADA,EAAA,EAAA,YAAA,IAEA,IAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,UAAA,EAAA,EACA,GAAA,KAAA,UAAA,OAEA,GAAA,UAEA,GAAA,SAAA,GAEA,MAAA,SAAA,IAOA,OAAA,UAAA,iBAAA,WACA,IAAA,cAAA,CACA,cAAA,KAAA,UAAA,OAAA,kBACA,IAAA,GAAA,GAAA,QAAA,aACA,eAAA,YAAA,GAEA,MAAA,eAGA,IAAA,YAAA,IAkCA,OA5BA,QAAA,UAAA,cAAA,WAKA,MAJA,cACA,WAAA,GAAA,QAAA,OAAA,eAAA,MACA,WAAA,SAAA,MAAA,MAEA,YAMA,OAAA,UAAA,mBAAA,WACA,WAAA,SAAA,MAAA,2BACA,YAOA,OAAA,UAAA,MAAA,MAMA,OAAA,UAAA,aAAA,OAAA,aAEA,GAAA,UC7LA,OAAA,iBAAA,gBAAA,eAAA,SAAA,EAAA,GAQA,QAAA,MAOA,EAAA,UAAA,UACA,UAAA,SACA,aAAA,YACA,gBAAA,eACA,SAAA,QACA,WAAA,UACA,aAAA,YACA,OAAA,OAOA,EAAA,UAAA,UAAA,SAMA,EAAA,UAAA,aAAA,YAMA,EAAA,UAAA,gBAAA,eAMA,EAAA,UAAA,SAAA,QAMA,EAAA,UAAA,WAAA,UAMA,EAAA,UAAA,aAAA,YAMA,EAAA,UAAA,OAAA,MAMA,EAAA,UAAA,YAAA,GAMA,EAAA,UAAA,YAAA,GAMA,EAAA,UAAA,eAAA,GAMA,EAAA,UAAA,iBAAA,EAMA,EAAA,UAAA,2BAAA,EAMA,EAAA,UAAA,4BAAA,KAMA,EAAA,UAAA,gBAKA,EAAA,UAAA,OAAA,WACA,EAAA,YAAA,0DAMA,EAAA,UAAA,iBAAA,WACA,EAAA,YAAA,+EAOA,EAAA,UAAA,eAAA,WACA,MAAA,cAOA,EAAA,UAAA,cAAA,WACA,OAAA,GAOA,EAAA,UAAA,4BAAA,SAAA,GACA,KAAA,2BAAA,EACA,KAAA,4BAAA,EAAA,UAAA,IAOA,EAAA,UAAA,2BAAA,WACA,MAAA,MAAA,0BACA,KAAA,4BAAA,KAAA,6BAQA,EAAA,UAAA,kBAAA,SAAA,GACA,MAAA,MAAA,6BACA,EAAA,wBAAA,EAAA,oBASA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,GAAA,KACA,KAAA,UAAA,EAAA,OAAA,OACA,KAAA,aAAA,KAAA,kBAAA,KACA,KAAA,SAAA,EAAA,MAAA,OACA,KAAA,OAAA,OAAA,SAAA,OACA,KAAA,WAAA,EAAA,EAAA,sBAAA,EAAA,UAQA,IANA,KAAA,8BACA,EAAA,MAAA,KAAA,gBAAA,EAAA,eAEA,EAAA,WACA,EAAA,MAAA,KAAA,aAAA,EAAA,sBAAA,EAAA,aAEA,KAAA,kBACA,IAAA,GAAA,GAAA,EAAA,EAAA,KAAA,aAAA,OAAA,EAAA,EAAA,IAAA,CACA,GAAA,GAAA,KAAA,aAAA,GAAA,KAIA,mBAAA,KACA,EAAA,EAAA,KAAA,IAEA,EAAA,MAAA,KAAA,aAAA,GAAA,KAAA,IAGA,MAAA,IAaA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,UAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,WACA,KAAA,aAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,cACA,KAAA,SAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,UACA,KAAA,WAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,YACA,KAAA,aAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,cACA,KAAA,OAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,QACA,KAAA,gBAAA,EAAA,uBAAA,EAAA,KAAA,SAAA,kBAQA,EAAA,UAAA,eAAA,SAAA,EAAA,GACA,GAAA,EAAA,YAAA,IAAA,EAAA,YAAA,GACA,EAAA,YAAA,8DACA,IAAA,EAAA,SAAA,GAEA,CAEA,IAAA,GADA,IAAA,EACA,EAAA,EAAA,EAAA,KAAA,aAAA,OAAA,EAAA,EAAA,IACA,KAAA,aAAA,GAAA,OAAA,IACA,KAAA,aAAA,GAAA,MAAA,EACA,GAAA,EAGA,IACA,KAAA,aAAA,MAAA,KAAA,EAAA,MAAA,QAVA,GAAA,YAAA,kDAmBA,EAAA,UAAA,gBAAA,WACA,MAAA,MAAA,aAAA,OAAA,GAMA,EAAA,UAAA,SAAA,WACA,EAAA,YAAA,2DAGA,EAAA,OAAA,ICtQA,OAAA,2BAAA,gBAAA,eAAA,SAAA,EAAA,GAGA,GAAA,GAEA,EAAA,8FACA,GAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OACA,OAAA,SAAA,YAAA,UAAA,WAAA,YACA,GAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,GACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,GAEA,EAAA,MACA,EAAA,EAAA,EACA,EAAA,EAEA,EAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,OADA,GAAA,gBAAA,GACA,EAQA,MAAA,UAAA,cAAA,SAAA,GACA,MAAA,MAAA,UAAA,EAAA,WAQA,KAAA,UAAA,SAAA,SAAA,GACA,MAAA,MAAA,UAAA,EAAA,WAOA,KAAA,UAAA,WAAA,WACA,MAAA,MAAA,IAAA,KAAA,cAAA,KAAA,WAAA,KAAA,UAAA,KAAA,WAAA,KAAA,aACA,KAAA,aAAA,KAAA,oBAQA,KAAA,UAAA,aAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,cAOA,KAAA,UAAA,kBAAA,WAEA,GAAA,GAAA,GAAA,MAAA,KAAA,cAAA,KAAA,WAAA,KAAA,UAAA,GAAA,EAAA,GACA,EAAA,GAAA,MAAA,EAAA,UAAA,KAAA,SAAA,EACA,OAAA,GAAA,EAAA,cAAA,EAAA,WACA,EAAA,YASA,KAAA,UAAA,cAAA,SAAA,GACA,EAAA,YAAA,KAAA,0BACA,EAAA,EAEA,IAAA,GAAA,KAAA,oBACA,EAAA,EAAA,KAAA,cAAA,EAAA,GACA,EAAA,EAAA,SAAA,GACA,EAAA,EAAA,KAAA,MAAA,EAAA,aAAA,GAAA,GACA,EAAA,EAAA,EAAA,SACA,EAAA,CAIA,OAHA,GAAA,GACA,IAEA,GAQA,KAAA,UAAA,eAAA,SAAA,GACA,EAAA,YAAA,KAAA,0BACA,EAAA,EAEA,IAAA,GAAA,KAAA,oBACA,EAAA,EAAA,KAAA,cAAA,KAAA,WAAA,GACA,EAAA,EAAA,SAAA,GACA,EAAA,EAAA,KAAA,MAAA,EAAA,aAAA,GAAA,GACA,EAAA,EAAA,EAAA,SACA,EAAA,CAIA,OAHA,IAAA,GACA,IAEA,GAQA,KAAA,UAAA,aAAA,WACA,GAAA,GAAA,EAAA,KAAA,cAAA,EAAA,EACA,OAAA,GAAA,KAAA,MAAA,KAAA,aAAA,GAAA,IAWA,EAAA,SAAA,GACA,KAAA,aAAA,GAQA,EAAA,UAAA,0BAAA,SAAA,GACA,KAAA,uBAAA,GAOA,EAAA,UAAA,0BAAA,WACA,MAAA,GAAA,YAAA,KAAA,wBACA,EAAA,KAAA,uBAGA,IAAA,GAAA,SAAA,EAAA,GACA,KAAA,EAAA,OAAA,GACA,EAAA,IAAA,CAEA,OAAA,IAGA,EAAA,SAAA,EAAA,EAAA,GACA,MAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,EAAA,KAGA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,GAAA,CAEA,OAAA,GAAA,EAAA,GAQA,GAAA,UAAA,OAAA,SAAA,GAIA,IAHA,GACA,GADA,EAAA,GAEA,EAAA,KAAA,aACA,EAAA,EAAA,KAAA,IAAA,CACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,EAGA,IAAA,EAEA,GADA,OAAA,EACA,IAEA,EAAA,UAAA,EAAA,EAAA,OAAA,OAEA,IAAA,OAEA,IAAA,EAEA,GAAA,MACA,IAAA,EAAA,CAEA,GAAA,GAAA,EAAA,OAAA,GACA,EAAA,EAAA,OACA,EAAA,EACA,QAAA,GACA,IAAA,IACA,EAAA,IACA,MACA,KAAA,IACA,EAAA,EAAA,aACA,MACA,KAAA,IACA,EAAA,EAAA,UACA,MACA,KAAA,IACA,EAAA,EAAA,cAAA,KAAA,4BACA,MACA,KAAA,IACA,EAAA,EAAA,eAAA,KAAA,4BACA,MACA,KAAA,IACA,EAAA,EAAA,cACA,MACA,KAAA,IACA,EAAA,EAAA,SACA,MACA,KAAA,IACA,EAAA,EAAA,KAAA,OAAA,EAAA,UAAA,GAAA,EACA,MACA,KAAA,IACA,EAAA,EAAA,EAAA,SACA,MACA,KAAA,IACA,EAAA,EAAA,YAAA,GAAA,KAAA,IACA,MACA,KAAA,IACA,EAAA,EAAA,UACA,MACA,KAAA,IACA,EAAA,EAAA,YAAA,EACA,MACA,KAAA,IACA,EAAA,EAAA,WAAA,EACA,MACA,KAAA,IACA,EAAA,EAAA,WAAA,IAAA,EACA,MACA,KAAA,IACA,EAAA,EAAA,YACA,MACA,KAAA,IACA,EAAA,EAAA,YACA,MACA,KAAA,IACA,EAAA,EAAA,iBACA,MACA,KAAA,IACA,EAAA,EAAA,oBAIA,OAAA,EAAA,IACA,IAAA,GACA,GAAA,EAAA,EAAA,EAAA,EACA,MACA,KAAA,GACA,GAAA,EAAA,EAAA,EAAA,EACA,MACA,KAAA,GACA,GAAA,EAAA,EAAA,EACA,MACA,KAAA,GACA,GAAA,GAAA,EAAA,CAEA,GAAA,GAAA,GAAA,CACA,IAAA,EAAA,OAAA,EAAA,OAEA,IAAA,EAAA,EAAA,EAEA,MACA,KAAA,GAEA,GADA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,GAGA,EAAA,EAAA,EAAA,EAEA,MACA,KAAA,GACA,GAAA,GAAA,EAAA,EAGA,EAAA,EAAA,IAAA,IACA,EAAA,KAAA,IAAA,GAGA,EAAA,GAAA,KAAA,MAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAIA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,GAAA,QAEA,MAAA,IAGA,EAAA,iBAAA,ICvUA,OAAA,yBAAA,gBAAA,cAAA,gBAAA,2BAAA,SAAA,EAAA,GASA,QAAA,GAAA,GAEA,KAAA,QADA,EACA,EAEA,EAAA,2BAEA,KAAA,gBAOA,EAAA,wBAAA,kBAMA,EAAA,2BAAA,OAMA,EAAA,mBAAA,0BAMA,EAAA,oBAAA,2BAMA,EAAA,wBAAA,eAMA,EAAA,UAAA,GAAA,GAAA,OAOA,EAAA,UAAA,OAAA,SAAA,GAOA,IANA,GAEA,GAFA,EAAA,iEACA,EAAA,GAEA,EAAA,KAAA,QAGA,EAAA,EAAA,KAAA,IAAA,CACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,EAGA,IAAA,EACA,GAAA,GAAA,MACA,CAGA,GAAA,GAAA,EACA,QAAA,GACA,IAAA,IACA,GAAA,GAAA,GAAA,MACA,IAAA,EAAA,MAAA,CACA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,MACA,EAAA,EAAA,MAAA,MAAA,EAEA,IAAA,KAAA,EAAA,CACA,GAAA,GAAA,EAAA,YAAA,IACA,GAAA,EAAA,OAAA,GACA,EAAA,EACA,EAAA,EAAA,QAAA,KAAA,MAEA,GAAA,EAAA,QAAA,OAAA,EACA,EAAA,EAAA,QAAA,MAAA,CAGA,IAEA,GAFA,EAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,GAAA,IAGA,GACA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,IAEA,EAAA,cACA,EAAA,EAAA,UAAA,GAGA,IAAA,GAAA,EAAA,MAAA,IACA,GAAA,EAAA,MACA,EAAA,EAAA,MACA,MAAA,IACA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,KACA,IAAA,EAAA,QAAA,OACA,EAAA,EAAA,OAAA,IAEA,EAAA,EACA,EAAA,KAEA,EAAA,EAAA,KAAA,IAEA,IAAA,GAAA,EAAA,YAAA,KACA,EAAA,EAAA,UAAA,EAAA,GAYA,EAAA,KACA,KACA,EAAA,EAGA,IAEA,GAFA,KACA,EAAA,EAEA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,GAAA,GAAA,EAAA,GACA,EAAA,SAAA,EAAA,GACA,GAAA,GACA,GAAA,GAEA,EAAA,OAAA,IACA,EAAA,KAAA,SAAA,EAAA,KACA,EAAA,IAEA,EAAA,KAAA,IAOA,IAJA,EAAA,OAAA,GACA,EAAA,KAAA,SAAA,EAAA,KAEA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EACA,QAAA,EAAA,IACA,IAAA,IACA,GAAA,CACA,MACA,KAAA,IACA,EAAA,EACA,gBAAA,KACA,EAAA,EAAA,UAAA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA,EAAA,IAEA,GAAA,CACA,MACA,KAAA,IACA,GAAA,CACA,MACA,KAAA,IACA,MAAA,GAGA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,EAAA,KAFA,GAAA,CAIA,MACA,KAAA,IACA,EAAA,EACA,gBAAA,KACA,EAAA,EAAA,UAAA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA,EAAA,IAEA,GAAA,CACA,MACA,SACA,GAAA,EAAA,SAIA,GAAA,YAAA,4DAEA,MACA,KAAA,IACA,IAAA,IACA,GAAA,GAAA,CACA,KACA,EAAA,SAAA,EAAA,IACA,MAAA,KACA,EAAA,YAAA,4CACA,EAAA,+BAAA,EACA,0BACA,EAAA,GAIA,KAAA,GADA,GAAA,MAAA,EAAA,EAAA,SAAA,GAAA,EAAA,SACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,OAAA,KACA,GAAA,KAGA,GADA,IAAA,EACA,EAAA,GAEA,KAAA,UAAA,EAAA,GAAA,KAAA,EAGA,MACA,KAAA,IACA,GAAA,GAAA,EAAA,OAAA,IACA,IAAA,EAAA,CACA,GAAA,GAAA,SAAA,EAAA,IACA,EAAA,EAAA,OAAA,KAAA,MAAA,IAEA,GADA,GAAA,EAAA,OACA,EAEA,EAAA,MAAA,EAAA,OAAA,GAAA,KAAA,SAGA,GAAA,CAEA,MACA,KAAA,IACA,GAAA,GAAA,EAAA,kBACA,KACA,EAAA,EAEA,YAAA,EACA,EAAA,EAAA,mBACA,aAAA,EACA,EAAA,EAAA,wBACA,SAAA,IACA,EAAA,EAAA,sBAIA,EAAA,GAAA,GAAA,iBAAA,GAAA,OAAA,EAAA,UACA,MACA,KAAA,IACA,GAAA,KAAA,kBAAA,CACA,GAAA,GAAA,CACA,KACA,EAAA,SAAA,EAAA,IACA,MAAA,GACA,EAAA,YAAA,4CACA,EAAA,uDACA,IAAA,EACA,EAAA,YAAA,4CACA,EAAA,8DACA,EAAA,KAAA,aAAA,OACA,EAAA,YAAA,4CACA,EAAA,0EAEA,GAAA,EAGA,IAAA,GAAA,KAAA,aAAA,GAAA,KACA,mBAAA,KACA,EAAA,EAAA,KAAA,IAEA,EAAA,EAEA,KACA,KAAA,IACA,EAAA,EAAA,OACA,MACA,KAAA,IACA,EAAA,EAAA,MAAA,IACA,MACA,KAAA,IACA,EAAA,GAAA,EAAA,UAAA,cAAA,EAAA,qBACA,MACA,KAAA,IACA,EAAA,GACA,MACA,SACA,EAAA,EAKA,GAAA,EAGA,IAAA,EAAA,CACA,EAAA,SAAA,EAAA,OAAA,GAAA,GACA,IAAA,GAAA,EAAA,MACA,GAAA,IACA,EAAA,EAAA,UAAA,EAAA,EAAA,IAIA,GAAA,EACA,GAAA,MAAA,EAAA,OAAA,GAGA,IAFA,EAAA,SAAA,EAAA,OAAA,GAAA,IAEA,EAAA,OAAA,GACA,GAAA,QAKA,KAFA,EAAA,SAAA,EAAA,IAEA,EAAA,OAAA,GACA,EAAA,IAAA,CAIA,IAAA,EAEA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,GAAA,QAEA,MAAA,IAOA,EAAA,UAAA,iBAAA,WACA,OAAA,GAOA,EAAA,UAAA,SAAA,WACA,MAAA,iBAGA,EAAA,cAAA,IC3VA,OAAA,mBACA,gBACA,cACA,sBACA,yBACA,SAAA,EAAA,EAAA,GAQA,GAAA,GAAA,YAOA,GAAA,UAAA,GAAA,GAMA,EAAA,UAAA,OAAA,GAAA,GAAA,cAMA,EAAA,UAAA,UAAA,EAAA,MAAA,IAMA,EAAA,UAAA,WAOA,EAAA,UAAA,SAAA,SAAA,GACA,EAAA,SAAA,EAAA,MAAA,OAAA,KAAA,UAAA,OACA,KAAA,OAAA,IASA,EAAA,UAAA,OAAA,aAOA,EAAA,UAAA,UAAA,SAAA,GACA,YAAA,GAAA,OACA,KAAA,OAAA,EAEA,EAAA,YAAA,0CACA,KAAA,WAAA,iCAQA,EAAA,UAAA,UAAA,WACA,MAAA,MAAA,QAOA,EAAA,UAAA,aAAA,SAAA,GACA,YAAA,GAAA,MACA,KAAA,UAAA,EAEA,EAAA,YAAA,gDACA,KAAA,WAAA,gCAQA,EAAA,UAAA,aAAA,WACA,MAAA,MAAA,WAOA,EAAA,UAAA,iBAAA,SAAA,GACA,KAAA,QAAA,KAAA,IAOA,EAAA,UAAA,qBAAA,SAAA,GACA,EAAA,YAAA,KAAA,QAAA,IAOA,EAAA,UAAA,MAAA,aAMA,EAAA,UAAA,SAAA,aAKA,EAAA,UAAA,SAAA,WACA,EAAA,YAAA,+DAGA,EAAA,SAAA,ICxIA,OAAA,sBAAA,cAAA,iBAAA,SAAA,GAQA,QAAA,KACA,KAAA,gBAOA,EAAA,UAAA,GAAA,GAAA,OAOA,EAAA,UAAA,OAAA,SAAA,GACA,MAAA,GAAA,UAOA,EAAA,UAAA,iBAAA,WACA,OAAA,GAOA,EAAA,UAAA,SAAA,WACA,MAAA,cAGA,EAAA,WAAA,IC1CA,OAAA,kCAAA,cAAA,kBAAA,sBAAA,SAAA,GASA,QAAA,MAOA,EAAA,UAAA,GAAA,GAAA,SAMA,EAAA,UAAA,OAAA,GAAA,GAAA,WAMA,EAAA,UAAA,UAAA,EAAA,MAAA,MAMA,EAAA,UAAA,OAAA,SAAA,GACA,GAAA,GAAA,KAEA,EAAA,WACA,GAAA,GAAA,EAAA,YACA,EAAA,EAAA,OAAA,EAIA,OAHA,GAAA,oBAAA,EAAA,YACA,GAAA,EAAA,sBAEA,EAGA,IAAA,OAAA,SAAA,OAAA,QAAA,IAAA,CACA,GAAA,GAAA,GACA,QAAA,QAAA,OAAA,EAAA,MAAA,MAAA,iBAAA,EAAA,OACA,OAAA,QAAA,MAAA,GACA,OAAA,QAAA,MAAA,EAAA,MAAA,KAAA,OAAA,EAAA,OACA,OAAA,QAAA,KAAA,GACA,OAAA,QAAA,MAAA,EAAA,MAAA,KAAA,OAAA,EAAA,OACA,OAAA,QAAA,KAAA,GACA,OAAA,QAAA,OAAA,EAAA,MAAA,iBAAA,EAAA,MAAA,OACA,OAAA,QAAA,MAAA,GAEA,OAAA,QAAA,IAAA,KASA,EAAA,UAAA,MAAA,SAAA,GACA,OAAA,SAAA,OAAA,QAAA,OACA,OAAA,QAAA,MAAA,IAOA,EAAA,UAAA,SAAA,WACA,OAAA,SAAA,OAAA,QAAA,UACA,OAAA,QAAA,YAQA,EAAA,UAAA,SAAA,WACA,MAAA,0BAOA,EAAA,uBAAA,IC9FA,OAAA,8BAAA,cAAA,kCAAA,SAAA,GAEA,MAAA","sourcesContent":["/*global window*/\ndefine('log4js.helper',[],function () {\n  'use strict';\n\n  /**\n   *\n   * @constructor\n   */\n  var Helper = function () {\n  };\n\n  Helper.prototype = {\n    isUndefined: function isUndefined(obj) {\n      return obj === void 0;\n    },\n    isNotUndefined: function isNotUndefined(obj) {\n      return !this.isUndefined(obj);\n    },\n    isFunction: function isFunction(fn) {\n      return typeof fn === 'function';\n    },\n    isBoolean: function isBoolean(bool){\n      return typeof bool === 'boolean';\n    },\n    toBoolean: function isBoolean(bool){\n      return Boolean(bool);\n    },\n    isString: function isString(str) {\n      return typeof str === 'string';\n    },\n    toString: function toString(obj) {\n      return (obj && obj.toString) ? obj.toString() : String(obj);\n    },\n    isArray: function isArray(array) {\n      return array instanceof Array;\n    },\n    arrayContains: function arrayContains(arr, val) {\n      var found = false;\n      for (var i = 0, len = arr.length; i < len; i++) {\n        if (arr[i] === val) {\n          found = true;\n          break;\n        }\n      }\n      return found;\n    },\n    arrayRemove: function arrayRemove(arr, val) {\n      var removed = false;\n      for (var i = 0, len = arr.length; i < len; i++) {\n        if (arr[i] === val) {\n          arr.splice(i, 1);\n          removed = true;\n          break;\n\n        }\n      }\n      return removed;\n    },\n    trim: function trim(str) {\n      return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    },\n    splitIntoLines: function splitIntoLines(text) {\n      // Ensure all line breaks are \\n only\n      var text2 = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return text2.split('\\n');\n    },\n    getExceptionMessage: function getExceptionMessage(ex) {\n      var message = '';\n      if (ex.message) {\n        message = ex.message;\n      } else if (ex.description) {\n        message = ex.description;\n      } else {\n        message = this.toString(ex);\n      }\n      return message;\n    },\n    getUrlFileName: function getUrlFileName(url) {\n      var lastSlashIndex = Math.max(url.lastIndexOf('/'), url.lastIndexOf('\\\\'));\n      return url.substr(lastSlashIndex + 1);\n    },\n    handleError: function handleError(message){\n      window.alert(message);\n    },\n    extractStringFromParam: function(param, defaultValue){\n      return this.isUndefined(param) ? defaultValue : String(param);\n    },\n    extractBooleanFromParam: function extractBooleanFromParam(param, defaultValue) {\n      return this.isUndefined(param) ? defaultValue : this.toBoolean(param);\n    },\n    getExceptionStringRep: function(ex){\n      if (ex) {\n        var exStr = 'Exception: ' + this.getExceptionMessage(ex);\n        try {\n          if (ex.lineNumber) {\n            exStr += ' on line number ' + ex.lineNumber;\n          }\n          if (ex.fileName) {\n            exStr += ' in file ' + this.getUrlFileName(ex.fileName);\n          }\n        } catch (localEx) {\n          this.handleError('Unable to obtain file and line information for error');\n        }\n//        if (showStackTraces && ex.stack) {\n//          exStr += this.newLine + 'Stack trace:' + this.newLine + ex.stack;\n//        }\n        return exStr;\n      }\n      return null;\n    },\n    anonymousLoggerName: '[anonymous]',\n    defaultLoggerName: '[default]',\n    nullLoggerName: '[null]',\n    rootLoggerName: 'root',\n    newLine: '\\r\\n'\n  };\n  return new Helper();\n});\n","define('log4js.level',[],function(){\n  'use strict';\n\n  /**\n   * Levels\n   * @param {Number} level\n   * @param {String} name\n   * @property {Number} level\n   * @property {String} name\n   * @constructor\n   */\n  function Level(level, name) {\n    this.level = level;\n    this.name = name;\n  }\n\n  /**\n   *\n   * @returns {String}\n   */\n  Level.prototype.toString = function () {\n    return this.name;\n  };\n\n  /**\n   *\n   * @param {Number} level\n   * @returns {Boolean}\n   */\n  Level.prototype.equals = function (level) {\n    return this.level === level.level;\n  };\n\n  /**\n   *\n   * @param {Number} level\n   * @returns {Boolean}\n   */\n  Level.prototype.isGreaterOrEqual = function (level) {\n    return this.level >= level.level;\n  };\n\n  /**\n   *\n   * @type {Level}\n   */\n  Level.ALL = new Level(Number.MIN_VALUE, 'ALL');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.TRACE = new Level(10000, 'TRACE');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.DEBUG = new Level(20000, 'DEBUG');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.INFO = new Level(30000, 'INFO');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.WARN = new Level(40000, 'WARN');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.ERROR = new Level(50000, 'ERROR');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.FATAL = new Level(60000, 'FATAL');\n  /**\n   *\n   * @type {Level}\n   */\n  Level.OFF = new Level(Number.MAX_VALUE, 'OFF');\n\n  /**\n   *\n   * @type {Level}\n   */\n  Level.ROOT_LOGGER_DEFAULT_LEVEL = Level.DEBUG;\n\n  return Level;\n});\n","define('log4js.eventSupport',['log4js.helper'], function(helper){\n  'use strict';\n\n  /**\n   * Custom event support\n   * @constructor\n   */\n  function EventSupport() {\n    this.eventTypes = [];\n    this.eventListeners = {};\n  }\n\n  /**\n   *\n   * @param {Array} eventTypesParam\n   */\n  EventSupport.prototype.setEventTypes = function (eventTypesParam) {\n    if (helper.isArray(eventTypesParam)) {\n      this.eventTypes = eventTypesParam;\n      this.eventListeners = {};\n      for (var i = 0, len = this.eventTypes.length; i < len; i++) {\n        this.eventListeners[this.eventTypes[i]] = [];\n      }\n    } else {\n      helper.handleError('EventSupport [' + this + ']: setEventTypes: eventTypes parameter must be an Array');\n    }\n  };\n\n  /**\n   *\n   * @param {String} eventType\n   * @param {Function} listener\n   */\n  EventSupport.prototype.addEventListener = function (eventType, listener) {\n    if (helper.isFunction(listener)) {\n      if (!helper.arrayContains(this.eventTypes, eventType)) {\n        helper.handleError('EventSupport [' + this + ']: addEventListener: no event called \"' + eventType + '\"');\n      } else {\n        this.eventListeners[eventType].push(listener);\n      }\n    } else {\n      helper.handleError('EventSupport [' + this + ']: addEventListener: listener must be a function');\n    }\n  };\n\n  /**\n   *\n   * @param {String} eventType\n   * @param {Function} listener\n   */\n  EventSupport.prototype.removeEventListener = function (eventType, listener) {\n    if (helper.isFunction(listener)) {\n      if (!helper.arrayContains(this.eventTypes, eventType)) {\n        helper.handleError('EventSupport [' + this + ']: removeEventListener: no event called \"' + eventType + '\"');\n      } else {\n        helper.arrayRemove(this.eventListeners[eventType], listener);\n      }\n    } else {\n      helper.handleError('EventSupport [' + this + ']: removeEventListener: listener must be a function');\n    }\n  };\n\n  /**\n   *\n   * @param {String} eventType\n   * @param {Array} eventArgs\n   */\n  EventSupport.prototype.dispatchEvent = function (eventType, eventArgs) {\n    if (helper.arrayContains(this.eventTypes, eventType)) {\n      var listeners = this.eventListeners[eventType];\n      for (var i = 0, len = listeners.length; i < len; i++) {\n        listeners[i].call(this, eventType, eventArgs);\n      }\n    } else {\n      helper.handleError('EventSupport [' + this + ']: dispatchEvent: no event called \"' + eventType + '\"');\n    }\n  };\n\n  return EventSupport;\n});\n","define('log4js.logger',['log4js.helper', 'log4js.level'], function (helper, Level) {\n  'use strict';\n\n  /**\n   *\n   * @param {String} name\n   * @param {Level} level\n   * @property {String} name\n   * @property {Level} [level]\n   * @property {Date} start\n   * @constructor\n   */\n  function Timer(name, level) {\n    this.name = name;\n    this.level = helper.isUndefined(level) ? Level.INFO : level;\n    this.start = new Date();\n  }\n\n  /**\n   *\n   * @returns {Number}\n   */\n  Timer.prototype.getElapsedTime = function () {\n    return new Date().getTime() - this.start.getTime();\n  };\n\n  /**\n   *\n   * @param {Logger} logger\n   * @param {Date} timeStamp\n   * @param {Level} level\n   * @param {Array} messages\n   * @param {Error} exception\n   * @property {Logger} logger\n   * @property {Date} timeStamp\n   * @property {Number} timeStampInMilliseconds\n   * @property {Number} timeStampInSeconds\n   * @property {Number} milliseconds\n   * @property {Level} level\n   * @property {Array} messages\n   * @property {Error} exception\n   * @constructor\n   */\n  var LoggingEvent = function (logger, timeStamp, level, messages, exception) {\n    this.logger = logger;\n    this.timeStamp = timeStamp;\n    this.timeStampInMilliseconds = timeStamp.getTime();\n    this.timeStampInSeconds = Math.floor(this.timeStampInMilliseconds / 1000);\n    this.milliseconds = this.timeStamp.getMilliseconds();\n    this.level = level;\n    this.messages = messages;\n    this.exception = exception;\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  LoggingEvent.prototype.getThrowableStrRep = function () {\n    return this.exception ? helper.getExceptionStringRep(this.exception) : ''; //TODO\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  LoggingEvent.prototype.getCombinedMessages = function () {\n    return (this.messages.length === 1) ? this.messages[0] :\n      this.messages.join(helper.newLine);\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  LoggingEvent.prototype.toString = function () {\n    return 'LoggingEvent[' + this.level + ']';\n  };\n\n  /**\n   *\n   * @param {String} [name]\n   * @property {String} name\n   * @property {} parent\n   * @property {Array} children\n   * @constructor\n   */\n  function Logger(name, log4js) {\n    this.name = name;\n    this.parent = null;\n    this.children = [];\n\n    var appenders = [];\n    var loggerLevel = null;\n    var isRoot = (this.name === helper.rootLoggerName);\n    var isNull = (this.name === helper.nullLoggerName);\n\n    var appenderCache = null;\n    var appenderCacheInvalidated = false;\n\n    /**\n     *\n     * @param {Logger} childLogger\n     */\n    this.addChild = function (childLogger) {\n      this.children.push(childLogger);\n      childLogger.parent = this;\n      childLogger.invalidateAppenderCache();\n    };\n\n    // Additivity\n    var additive = true;\n    /**\n     *\n     * @returns {boolean}\n     */\n    this.getAdditivity = function () {\n      return additive;\n    };\n\n    /**\n     *\n     * @param additivity\n     */\n    this.setAdditivity = function (additivity) {\n      var valueChanged = (additive !== additivity);\n      additive = additivity;\n      if (valueChanged) {\n        this.invalidateAppenderCache();\n      }\n    };\n\n    /**\n     * Create methods that use the appenders variable in this scope\n     * @param appender\n     */\n    this.addAppender = function (appender) {\n      if (isNull) {\n        helper.handleError('Logger.addAppender: you may not add an appender to the null logger');\n      } else {\n        if (appender instanceof log4js.Appender) {\n          if (!helper.arrayContains(appenders, appender)) {\n            appenders.push(appender);\n            appender.setAddedToLogger(this);\n            this.invalidateAppenderCache();\n          }\n        } else {\n          helper.handleError('Logger.addAppender: appender supplied (\"' + helper.toString(appender) + '\") is not a subclass of Appender');\n        }\n      }\n    };\n\n    /**\n     *\n     * @param appender\n     */\n    this.removeAppender = function (appender) {\n      helper.arrayRemove(appenders, appender);\n      appender.setRemovedFromLogger(this);\n      this.invalidateAppenderCache();\n    };\n\n    /**\n     * Deletes all registred Appenders\n     */\n    this.removeAllAppenders = function () {\n      var appenderCount = appenders.length;\n      if (appenderCount > 0) {\n        for (var i = 0; i < appenderCount; i++) {\n          appenders[i].setRemovedFromLogger(this);\n        }\n        appenders.length = 0;\n        this.invalidateAppenderCache();\n      }\n    };\n\n    /**\n     *\n     * @returns {*}\n     */\n    this.getEffectiveAppenders = function () {\n      if (appenderCache === null || appenderCacheInvalidated) {\n        // Build appender cache\n        var parentEffectiveAppenders = (isRoot || !this.getAdditivity()) ?\n          [] : this.parent.getEffectiveAppenders();\n        appenderCache = parentEffectiveAppenders.concat(appenders);\n        appenderCacheInvalidated = false;\n      }\n      return appenderCache;\n    };\n\n    /**\n     * @todo document\n     */\n    this.invalidateAppenderCache = function () {\n      appenderCacheInvalidated = true;\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        this.children[i].invalidateAppenderCache();\n      }\n    };\n\n    /**\n     *\n     * @param {Level} level\n     * @param {Object} params\n     */\n    this.log = function (level, params) {\n      if (log4js.isEnabled() && level.isGreaterOrEqual(this.getEffectiveLevel())) {\n        // Check whether last param is an exception\n        var exception;\n        var finalParamIndex = params.length - 1;\n        var lastParam = params[finalParamIndex];\n        if (params.length > 1 && lastParam instanceof Error) {\n          exception = lastParam;\n          finalParamIndex--;\n        }\n\n        // Construct genuine array for the params\n        var messages = [];\n        for (var i = 0; i <= finalParamIndex; i++) {\n          messages[i] = params[i];\n        }\n\n        var loggingEvent = new LoggingEvent(\n          this, new Date(), level, messages, exception);\n\n        this.callAppenders(loggingEvent);\n      }\n    };\n\n    /**\n     *\n     * @param loggingEvent\n     */\n    this.callAppenders = function (loggingEvent) {\n      var effectiveAppenders = this.getEffectiveAppenders();\n      for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n        effectiveAppenders[i].doAppend(loggingEvent);\n      }\n    };\n\n    /**\n     *\n     * @param {Level} level\n     */\n    this.setLevel = function (level) {\n      // Having a level of null on the root logger would be very bad.\n      if (isRoot && level === null) {\n        helper.handleError('Logger.setLevel: you cannot set the level of the root logger to null');\n      } else if (level instanceof Level) {\n        loggerLevel = level;\n      } else {\n        helper.handleError('Logger.setLevel: level supplied to logger ' + this.name + ' is not an instance of log4js.Level');\n      }\n    };\n\n    /**\n     *\n     * @returns {Level}\n     */\n    this.getLevel = function () {\n      return loggerLevel;\n    };\n\n    /**\n     *\n     * @returns {Level}\n     */\n    this.getEffectiveLevel = function () {\n      var level;\n      for (var logger = this; logger !== null; logger = logger.parent) {\n        level = logger.getLevel();\n        if (level !== null) {\n          break;\n        }\n      }\n      return level;\n    };\n\n    /**\n     *\n     * @param {String} name\n     * @param {Boolean} initiallyExpanded\n     */\n    this.group = function (name, initiallyExpanded) {\n      if (log4js.isEnabled()) {\n        var effectiveAppenders = this.getEffectiveAppenders();\n        for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n          effectiveAppenders[i].group(name, initiallyExpanded);\n        }\n      }\n    };\n\n    /**\n     * @todo document\n     */\n    this.groupEnd = function () {\n      if (log4js.isEnabled()) {\n        var effectiveAppenders = this.getEffectiveAppenders();\n        for (var i = 0, len = effectiveAppenders.length; i < len; i++) {\n          effectiveAppenders[i].groupEnd();\n        }\n      }\n    };\n\n    var timers = {};\n\n    /**\n     *\n     * @param {String} name\n     * @param {Level} level\n     */\n    this.time = function (name, level) {\n      if (log4js.isEnabled()) {\n        if (helper.isUndefined(name)) {\n          helper.handleError('Logger.time: a name for the timer must be supplied');\n        } else if (level && !(level instanceof Level)) {\n          helper.handleError('Logger.time: level supplied to timer ' + name + ' is not an instance of log4javascript.Level');\n        } else {\n          timers[name] = new Timer(name, level);\n        }\n      }\n    };\n\n    /**\n     *\n     * @param {String} name\n     */\n    this.timeEnd = function (name) {\n      if (log4js.isEnabled()) {\n        if (helper.isUndefined(name)) {\n          helper.handleError('Logger.timeEnd: a name for the timer must be supplied');\n        } else if (timers[name]) {\n          var timer = timers[name];\n          var milliseconds = timer.getElapsedTime();\n          this.log(timer.level, ['Timer ' + helper.toString(name) + ' completed in ' + milliseconds + 'ms']);\n          delete timers[name];\n        } else {\n          helper.handleError('Logger.timeEnd: no timer found with name ' + name);\n        }\n      }\n    };\n\n    /**\n     *\n     * @param expr\n     */\n    this.assert = function (expr) {\n      if (log4js.isEnabled() && !expr) {\n        var args = [];\n        for (var i = 1, len = arguments.length; i < len; i++) {\n          args.push(arguments[i]);\n        }\n        args = (args.length > 0) ? args : ['Assertion Failure'];\n        args.push(helper.newLine);\n        args.push(expr);\n        this.log(Level.ERROR, args);\n      }\n    };\n\n    /**\n     *\n     * @returns {String}\n     */\n    this.toString = function () {\n      return 'Logger[' + this.name + ']';\n    };\n  }\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.trace = function () {\n    this.log(Level.TRACE, arguments);\n  };\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.debug = function () {\n    this.log(Level.DEBUG, arguments);\n  };\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.info = function () {\n    this.log(Level.INFO, arguments);\n  };\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.warn = function () {\n    this.log(Level.WARN, arguments);\n  };\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.error = function () {\n    this.log(Level.ERROR, arguments);\n  };\n\n  /**\n   * @todo document\n   */\n  Logger.prototype.fatal = function () {\n    this.log(Level.FATAL, arguments);\n  };\n\n  /**\n   *\n   * @param {Level} level\n   * @returns {Boolean}\n   */\n  Logger.prototype.isEnabledFor = function (level) {\n    return level.isGreaterOrEqual(this.getEffectiveLevel());\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isTraceEnabled = function () {\n    return this.isEnabledFor(Level.TRACE);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isDebugEnabled = function () {\n    return this.isEnabledFor(Level.DEBUG);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isInfoEnabled = function () {\n    return this.isEnabledFor(Level.INFO);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isWarnEnabled = function () {\n    return this.isEnabledFor(Level.WARN);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isErrorEnabled = function () {\n    return this.isEnabledFor(Level.ERROR);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Logger.prototype.isFatalEnabled = function () {\n    return this.isEnabledFor(Level.FATAL);\n  };\n\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.trace.isEntryPoint = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.debug.isEntryPoint = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.info.isEntryPoint = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.warn.isEntryPoint = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.error.isEntryPoint = true;\n  /**\n   *\n   * @type {boolean}\n   */\n  Logger.prototype.fatal.isEntryPoint = true;\n\n  /**\n   *\n   * @type {LoggingEvent}\n   */\n  Logger.LoggingEvent = LoggingEvent;\n\n  return Logger;\n});\n","define('log4js.core',[\n  'log4js.helper',\n  'log4js.level',\n  'log4js.eventSupport',\n  'log4js.logger'\n], function (helper, Level, EventSupport, Logger) {\n  'use strict';\n\n  var loggers = {};\n  var loggerNames = [];\n  var defaultLogger = null;\n  var rootLogger = null;\n\n  /**\n   * Create main Log4js object; this will be assigned public properties\n   * @property {String} version\n   * @property {String} edition\n   * @constructor\n   */\n  function Log4js() {\n    this.version = '0.0.2';\n    this.enabled = true;\n    this.showStackTraces = false;\n    this.applicationStartDate = new Date();\n    this.setRootLogger();\n  }\n\n  /**\n   *\n   * @type {EventSupport}\n   */\n  Log4js.prototype = new EventSupport();\n\n  /**\n   *\n   */\n  Log4js.prototype.setRootLogger = function(){\n    rootLogger = new Logger(helper.rootLoggerName, this);\n    rootLogger.setLevel(Level.ROOT_LOGGER_DEFAULT_LEVEL);\n  };\n\n  /**\n   *\n   * @param {Boolean} enable\n   */\n  Log4js.prototype.setEnabled = function (enable) {\n    this.enabled = helper.toBoolean(enable);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Log4js.prototype.isEnabled = function () {\n    return this.enabled;\n  };\n\n  Log4js.prototype.useTimeStampsInMilliseconds = true;\n\n  /**\n   *\n   * @param {Boolean} timeStampsInMilliseconds\n   */\n  Log4js.prototype.setTimeStampsInMilliseconds = function (timeStampsInMilliseconds) {\n    this.useTimeStampsInMilliseconds = helper.toBoolean(timeStampsInMilliseconds);\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Log4js.prototype.isTimeStampsInMilliseconds = function () {\n    return this.useTimeStampsInMilliseconds;\n  };\n\n  /**\n   * This evaluates the given expression in the current scope, thus allowing\n   * scripts to access private variables. Particularly useful for testing\n   * @param expr\n   * @returns {Object}\n   */\n  Log4js.prototype.evalInScope = function (expr) {\n    /* jshint evil:true */\n    return eval(expr);\n  };\n\n  /**\n   *\n   * @param {Boolean} show\n   */\n  Log4js.prototype.setShowStackTraces = function (show) {\n    this.showStackTraces = helper.toBoolean(show);\n  };\n\n  /**\n   *\n   * @returns {Logger}\n   */\n  Log4js.prototype.getRootLogger = function () {\n    return rootLogger;\n  };\n\n  /**\n   *\n   * @param {String} loggerName\n   * @returns {Logger}\n   */\n  Log4js.prototype.getLogger = function (loggerName) {\n    // Use default logger if loggerName is not specified or invalid\n    if (!helper.isString(loggerName)) {\n      helper.handleError(\n          'Log4js [' + this + ']: getLogger: non-string logger name ' +\n          loggerName +\n          ' supplied, returning anonymous logger'\n      );\n      loggerName = helper.anonymousLoggerName;\n    }\n\n    // Do not allow retrieval of the root logger by name\n    if (loggerName === helper.rootLoggerName) {\n      helper.handleError('Log4js [' + this + ']: getLogger: root logger may not be obtained by name');\n    }\n\n    // Create the logger for this name if it doesn't already exist\n    if (!loggers[loggerName]) {\n      var logger = new Logger(loggerName, this);\n      loggers[loggerName] = logger;\n      loggerNames.push(loggerName);\n\n      // Set up parent logger, if it doesn't exist\n      var lastDotIndex = loggerName.lastIndexOf('.');\n      var parentLogger;\n      if (lastDotIndex > -1) {\n        var parentLoggerName = loggerName.substring(0, lastDotIndex);\n        parentLogger = this.getLogger(parentLoggerName); // Recursively sets up grandparents etc.\n      } else {\n        parentLogger = rootLogger;\n      }\n      parentLogger.addChild(logger);\n    }\n    return loggers[loggerName];\n  };\n\n  /**\n   *\n   * @returns {Logger}\n   */\n  Log4js.prototype.getDefaultLogger = function () {\n    if (!defaultLogger) {\n      defaultLogger = this.getLogger(helper.defaultLoggerName);\n      var appender = new Log4js.PopUpAppender(); //TODO\n      defaultLogger.addAppender(appender);\n    }\n    return defaultLogger;\n  };\n\n  var nullLogger = null;\n\n  /**\n   *\n   * @returns {Logger}\n   */\n  Log4js.prototype.getNullLogger = function () {\n    if (!nullLogger) {\n      nullLogger = new Logger(helper.nullLoggerName, this);\n      nullLogger.setLevel(Level.OFF);\n    }\n    return nullLogger;\n  };\n\n  /**\n   * Destroys all loggers\n   */\n  Log4js.prototype.resetConfiguration = function () {\n    rootLogger.setLevel(Level.ROOT_LOGGER_DEFAULT_LEVEL);\n    loggers = {};\n  };\n\n  /**\n   *\n   * @type {Level}\n   */\n  Log4js.prototype.Level = Level;\n\n  /**\n   *\n   * @type {LoggingEvent}\n   */\n  Log4js.prototype.LoggingEvent = Logger.LoggingEvent;\n\n  return new Log4js();\n});\n","/*global window*/\ndefine('log4js.layout',['log4js.helper', 'log4js.core'], function (helper, log4js) {\n  'use strict';\n\n  /**\n   * Layout\n   * @constructor\n   * @mixin\n   */\n  function Layout() {\n  }\n\n  /**\n   *\n   * @type {{loggerKey: string, timeStampKey: string, millisecondsKey: string, levelKey: string, messageKey: string, exceptionKey: string, urlKey: string}}\n   */\n  Layout.prototype.defaults = {\n    loggerKey: 'logger',\n    timeStampKey: 'timestamp',\n    millisecondsKey: 'milliseconds',\n    levelKey: 'level',\n    messageKey: 'message',\n    exceptionKey: 'exception',\n    urlKey: 'url'\n  };\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.loggerKey = 'logger';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.timeStampKey = 'timestamp';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.millisecondsKey = 'milliseconds';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.levelKey = 'level';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.messageKey = 'message';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.exceptionKey = 'exception';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.urlKey = 'url';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.batchHeader = '';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.batchFooter = '';\n\n  /**\n   *\n   * @type {string}\n   */\n  Layout.prototype.batchSeparator = '';\n\n  /**\n   *\n   * @type {boolean}\n   */\n  Layout.prototype.returnsPostData = false;\n\n  /**\n   *\n   * @type {boolean}\n   */\n  Layout.prototype.overrideTimeStampsSetting = false;\n\n  /**\n   *\n   * @type {null}\n   */\n  Layout.prototype.useTimeStampsInMilliseconds = null;\n\n  /**\n   *\n   * @type {Array}\n   */\n  Layout.prototype.customFields = [];\n\n  /**\n   * @todo document\n   */\n  Layout.prototype.format = function () {\n    helper.handleError('Layout.format: layout supplied has no format() method');\n  };\n\n  /**\n   * @todo document\n   */\n  Layout.prototype.ignoresThrowable = function () {\n    helper.handleError('Layout.ignoresThrowable = layout supplied has no ignoresThrowable() method');\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  Layout.prototype.getContentType = function () {\n    return 'text/plain';\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Layout.prototype.allowBatching = function () {\n    return true;\n  };\n\n  /**\n   *\n   * @param {Boolean} timeStampsInMilliseconds\n   */\n  Layout.prototype.setTimeStampsInMilliseconds = function (timeStampsInMilliseconds) {\n    this.overrideTimeStampsSetting = true;\n    this.useTimeStampsInMilliseconds = helper.toBoolean(timeStampsInMilliseconds);\n  };\n\n  /**\n   *\n   * @returns {null|Layout.useTimeStampsInMilliseconds|*}\n   */\n  Layout.prototype.isTimeStampsInMilliseconds = function () {\n    return this.overrideTimeStampsSetting ?\n      this.useTimeStampsInMilliseconds : this.useTimeStampsInMilliseconds;\n  };\n\n  /**\n   *\n   * @param loggingEvent\n   * @returns {Number|LoggingEvent.timeStampInMilliseconds|*}\n   */\n  Layout.prototype.getTimeStampValue = function (loggingEvent) {\n    return this.isTimeStampsInMilliseconds() ?\n      loggingEvent.timeStampInMilliseconds : loggingEvent.timeStampInSeconds;\n  };\n\n  /**\n   *\n   * @param loggingEvent\n   * @param combineMessages\n   * @returns {*}\n   */\n  Layout.prototype.getDataValues = function (loggingEvent, combineMessages) {\n    var dataValues = [\n      [this.loggerKey, loggingEvent.logger.name],\n      [this.timeStampKey, this.getTimeStampValue(loggingEvent)],\n      [this.levelKey, loggingEvent.level.name],\n      [this.urlKey, window.location.href],\n      [this.messageKey, combineMessages ? loggingEvent.getCombinedMessages() : loggingEvent.messages]\n    ];\n    if (!this.isTimeStampsInMilliseconds()) {\n      dataValues.push([this.millisecondsKey, loggingEvent.milliseconds]);\n    }\n    if (loggingEvent.exception) {\n      dataValues.push([this.exceptionKey, helper.getExceptionStringRep(loggingEvent.exception)]);\n    }\n    if (this.hasCustomFields()) {\n      for (var i = 0, len = this.customFields.length; i < len; i++) {\n        var val = this.customFields[i].value;\n\n        // Check if the value is a function. If so, execute it, passing it the\n        // current layout and the logging event\n        if (typeof val === 'function') {\n          val = val(this, loggingEvent);\n        }\n        dataValues.push([this.customFields[i].name, val]);\n      }\n    }\n    return dataValues;\n  };\n\n  /**\n   *\n   * @param loggerKey\n   * @param timeStampKey\n   * @param levelKey\n   * @param messageKey\n   * @param exceptionKey\n   * @param urlKey\n   * @param millisecondsKey\n   */\n  Layout.prototype.setKeys = function (loggerKey, timeStampKey, levelKey, messageKey, exceptionKey, urlKey, millisecondsKey) {\n    this.loggerKey = helper.extractStringFromParam(loggerKey, this.defaults.loggerKey);\n    this.timeStampKey = helper.extractStringFromParam(timeStampKey, this.defaults.timeStampKey);\n    this.levelKey = helper.extractStringFromParam(levelKey, this.defaults.levelKey);\n    this.messageKey = helper.extractStringFromParam(messageKey, this.defaults.messageKey);\n    this.exceptionKey = helper.extractStringFromParam(exceptionKey, this.defaults.exceptionKey);\n    this.urlKey = helper.extractStringFromParam(urlKey, this.defaults.urlKey);\n    this.millisecondsKey = helper.extractStringFromParam(millisecondsKey, this.defaults.millisecondsKey);\n  };\n\n  /**\n   *\n   * @param name\n   * @param value\n   */\n  Layout.prototype.setCustomField = function (name, value) {\n    if (helper.isUndefined(name) || helper.isUndefined(value)) {\n      helper.handleError('layout.setCustomFields: name and value must be defined');\n    } else if (!helper.isString(name)) {\n      helper.handleError('layout.setCustomFields: name must be \"String\"');\n    } else {\n      var fieldUpdated = false;\n      for (var i = 0, len = this.customFields.length; i < len; i++) {\n        if (this.customFields[i].name === name) {\n          this.customFields[i].value = value;\n          fieldUpdated = true;\n        }\n      }\n      if (!fieldUpdated) {\n        this.customFields.push({'name': name, 'value': value});\n      }\n    }\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  Layout.prototype.hasCustomFields = function () {\n    return (this.customFields.length > 0);\n  };\n\n  /**\n   * @todo document\n   */\n  Layout.prototype.toString = function () {\n    helper.handleError('Layout.toString: all layouts must override this method');\n  };\n\n  log4js.Layout = Layout;\n});\n\n","define('log4js.simpleDateFormat',['log4js.helper', 'log4js.core'], function (helper, log4js) {\n  'use strict';\n\n  var SimpleDateFormat;\n\n  var regex = /('[^']*')|(G+|y+|M+|w+|W+|D+|d+|F+|E+|a+|H+|k+|K+|h+|m+|s+|S+|Z+)|([a-zA-Z]+)|([^a-zA-Z']+)/;\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var TEXT2 = 0, TEXT3 = 1, NUMBER = 2, YEAR = 3, MONTH = 4, TIMEZONE = 5;\n  var types = {\n    G: TEXT2,\n    y: YEAR,\n    M: MONTH,\n    w: NUMBER,\n    W: NUMBER,\n    D: NUMBER,\n    d: NUMBER,\n    F: NUMBER,\n    E: TEXT3,\n    a: TEXT2,\n    H: NUMBER,\n    k: NUMBER,\n    K: NUMBER,\n    h: NUMBER,\n    m: NUMBER,\n    s: NUMBER,\n    S: NUMBER,\n    Z: TIMEZONE\n  };\n  var ONE_DAY = 24 * 60 * 60 * 1000;\n  var ONE_WEEK = 7 * ONE_DAY;\n  var DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK = 1;\n\n  var newDateAtMidnight = function (year, month, day) {\n    var d = new Date(year, month, day, 0, 0, 0);\n    d.setMilliseconds(0);\n    return d;\n  };\n\n  /**\n   *\n   * @param {Date} date\n   * @returns {Number}\n   */\n  Date.prototype.getDifference = function (date) {\n    return this.getTime() - date.getTime();\n  };\n\n  /**\n   *\n   * @param {Date} d\n   * @returns {boolean}\n   */\n  Date.prototype.isBefore = function (d) {\n    return this.getTime() < d.getTime();\n  };\n\n  /**\n   *\n   * @returns {Number}\n   */\n  Date.prototype.getUTCTime = function () {\n    return Date.UTC(this.getFullYear(), this.getMonth(), this.getDate(), this.getHours(), this.getMinutes(),\n      this.getSeconds(), this.getMilliseconds());\n  };\n\n  /**\n   *\n   * @param {Date} d\n   * @returns {number}\n   */\n  Date.prototype.getTimeSince = function (d) {\n    return this.getUTCTime() - d.getUTCTime();\n  };\n\n  /**\n   *\n   * @returns {Date}\n   */\n  Date.prototype.getPreviousSunday = function () {\n    // Using midday avoids any possibility of DST messing things up\n    var midday = new Date(this.getFullYear(), this.getMonth(), this.getDate(), 12, 0, 0);\n    var previousSunday = new Date(midday.getTime() - this.getDay() * ONE_DAY);\n    return newDateAtMidnight(previousSunday.getFullYear(), previousSunday.getMonth(),\n      previousSunday.getDate());\n  };\n\n  /**\n   *\n   * @extends Date\n   * @param {Number} minimalDaysInFirstWeek\n   * @returns {Number}\n   */\n  Date.prototype.getWeekInYear = function (minimalDaysInFirstWeek) {\n    if (helper.isUndefined(this.minimalDaysInFirstWeek)) {\n      minimalDaysInFirstWeek = DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK;\n    }\n    var previousSunday = this.getPreviousSunday();\n    var startOfYear = newDateAtMidnight(this.getFullYear(), 0, 1);\n    var numberOfSundays = previousSunday.isBefore(startOfYear) ?\n      0 : 1 + Math.floor(previousSunday.getTimeSince(startOfYear) / ONE_WEEK);\n    var numberOfDaysInFirstWeek = 7 - startOfYear.getDay();\n    var weekInYear = numberOfSundays;\n    if (numberOfDaysInFirstWeek < minimalDaysInFirstWeek) {\n      weekInYear--;\n    }\n    return weekInYear;\n  };\n\n  /**\n   *\n   * @param {Number} minimalDaysInFirstWeek\n   * @returns {Number}\n   */\n  Date.prototype.getWeekInMonth = function (minimalDaysInFirstWeek) {\n    if (helper.isUndefined(this.minimalDaysInFirstWeek)) {\n      minimalDaysInFirstWeek = DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK;\n    }\n    var previousSunday = this.getPreviousSunday();\n    var startOfMonth = newDateAtMidnight(this.getFullYear(), this.getMonth(), 1);\n    var numberOfSundays = previousSunday.isBefore(startOfMonth) ?\n      0 : 1 + Math.floor(previousSunday.getTimeSince(startOfMonth) / ONE_WEEK);\n    var numberOfDaysInFirstWeek = 7 - startOfMonth.getDay();\n    var weekInMonth = numberOfSundays;\n    if (numberOfDaysInFirstWeek >= minimalDaysInFirstWeek) {\n      weekInMonth++;\n    }\n    return weekInMonth;\n  };\n\n  /**\n   *\n   * @returns {Number}\n   * @this {Date}\n   */\n  Date.prototype.getDayInYear = function () {\n    var startOfYear = newDateAtMidnight(this.getFullYear(), 0, 1);\n    return 1 + Math.floor(this.getTimeSince(startOfYear) / ONE_DAY);\n  };\n\n  /* ------------------------------------------------------------------ */\n\n  /**\n   *\n   * @param formatString\n   * @this {SimpleDateFormat}\n   * @constructor\n   */\n  SimpleDateFormat = function (formatString) {\n    this.formatString = formatString;\n  };\n\n  /**\n   * Sets the minimum number of days in a week in order for that week to\n   * be considered as belonging to a particular month or year\n   * @param {Number} days\n   */\n  SimpleDateFormat.prototype.setMinimalDaysInFirstWeek = function (days) {\n    this.minimalDaysInFirstWeek = days;\n  };\n\n  /**\n   *\n   * @returns {Number}\n   */\n  SimpleDateFormat.prototype.getMinimalDaysInFirstWeek = function () {\n    return helper.isUndefined(this.minimalDaysInFirstWeek) ?\n      DEFAULT_MINIMAL_DAYS_IN_FIRST_WEEK : this.minimalDaysInFirstWeek;\n  };\n\n  var padWithZeroes = function (str, len) {\n    while (str.length < len) {\n      str = '0' + str;\n    }\n    return str;\n  };\n\n  var formatText = function (data, numberOfLetters, minLength) {\n    return (numberOfLetters >= 4) ? data : data.substr(0, Math.max(minLength, numberOfLetters));\n  };\n\n  var formatNumber = function (data, numberOfLetters) {\n    var dataString = '' + data;\n    // Pad with 0s as necessary\n    return padWithZeroes(dataString, numberOfLetters);\n  };\n\n  /**\n   *\n   * @param {Date} date\n   * @returns {string}\n   */\n  SimpleDateFormat.prototype.format = function (date) {\n    var formattedString = '';\n    var result;\n    var searchString = this.formatString;\n    while ((result = regex.exec(searchString))) {\n      var quotedString = result[1];\n      var patternLetters = result[2];\n      var otherLetters = result[3];\n      var otherCharacters = result[4];\n\n      // If the pattern matched is quoted string, output the text between the quotes\n      if (quotedString) {\n        if (quotedString === '\\'\\'') {\n          formattedString += '\\'';\n        } else {\n          formattedString += quotedString.substring(1, quotedString.length - 1);\n        }\n      } else if (otherLetters) {\n        // Swallow non-pattern letters by doing nothing here\n      } else if (otherCharacters) {\n        // Simply output other characters\n        formattedString += otherCharacters;\n      } else if (patternLetters) {\n        // Replace pattern letters\n        var patternLetter = patternLetters.charAt(0);\n        var numberOfLetters = patternLetters.length;\n        var rawData = '';\n        switch (patternLetter) {\n        case 'G':\n          rawData = 'AD';\n          break;\n        case 'y':\n          rawData = date.getFullYear();\n          break;\n        case 'M':\n          rawData = date.getMonth();\n          break;\n        case 'w':\n          rawData = date.getWeekInYear(this.getMinimalDaysInFirstWeek());\n          break;\n        case 'W':\n          rawData = date.getWeekInMonth(this.getMinimalDaysInFirstWeek());\n          break;\n        case 'D':\n          rawData = date.getDayInYear();\n          break;\n        case 'd':\n          rawData = date.getDate();\n          break;\n        case 'F':\n          rawData = 1 + Math.floor((date.getDate() - 1) / 7);\n          break;\n        case 'E':\n          rawData = dayNames[date.getDay()];\n          break;\n        case 'a':\n          rawData = (date.getHours() >= 12) ? 'PM' : 'AM';\n          break;\n        case 'H':\n          rawData = date.getHours();\n          break;\n        case 'k':\n          rawData = date.getHours() || 24;\n          break;\n        case 'K':\n          rawData = date.getHours() % 12;\n          break;\n        case 'h':\n          rawData = (date.getHours() % 12) || 12;\n          break;\n        case 'm':\n          rawData = date.getMinutes();\n          break;\n        case 's':\n          rawData = date.getSeconds();\n          break;\n        case 'S':\n          rawData = date.getMilliseconds();\n          break;\n        case 'Z':\n          rawData = date.getTimezoneOffset(); // This returns the number of minutes since GMT was this time.\n          break;\n        }\n        // Format the raw data depending on the type\n        switch (types[patternLetter]) {\n        case TEXT2:\n          formattedString += formatText(rawData, numberOfLetters, 2);\n          break;\n        case TEXT3:\n          formattedString += formatText(rawData, numberOfLetters, 3);\n          break;\n        case NUMBER:\n          formattedString += formatNumber(rawData, numberOfLetters);\n          break;\n        case YEAR:\n          if (numberOfLetters <= 3) {\n            // Output a 2-digit year\n            var dataString = '' + rawData;\n            formattedString += dataString.substr(2, 2);\n          } else {\n            formattedString += formatNumber(rawData, numberOfLetters);\n          }\n          break;\n        case MONTH:\n          if (numberOfLetters >= 3) {\n            formattedString += formatText(monthNames[rawData], numberOfLetters, numberOfLetters);\n          } else {\n            // NB. Months returned by getMonth are zero-based\n            formattedString += formatNumber(rawData + 1, numberOfLetters);\n          }\n          break;\n        case TIMEZONE:\n          var isPositive = (rawData > 0);\n          // The following line looks like a mistake but isn't\n          // because of the way getTimezoneOffset measures.\n          var prefix = isPositive ? '-' : '+';\n          var absData = Math.abs(rawData);\n\n          // Hours\n          var hours = '' + Math.floor(absData / 60);\n          hours = padWithZeroes(hours, 2);\n          // Minutes\n          var minutes = '' + (absData % 60);\n          minutes = padWithZeroes(minutes, 2);\n\n          formattedString += prefix + hours + minutes;\n          break;\n        }\n      }\n      searchString = searchString.substr(result.index + result[0].length);\n    }\n    return formattedString;\n  };\n\n  log4js.SimpleDateFormat = SimpleDateFormat;\n});\n","define('log4js.layout.pattern',['log4js.helper', 'log4js.core', 'log4js.layout', 'log4js.simpleDateFormat'], function (helper, log4js) {\n  'use strict';\n\n  /**\n   * PatternLayout\n   * @param pattern\n   * @constructor\n   * @mixes Layout\n   */\n  function PatternLayout(pattern) {\n    if (pattern) {\n      this.pattern = pattern;\n    } else {\n      this.pattern = PatternLayout.DEFAULT_CONVERSION_PATTERN;\n    }\n    this.customFields = [];\n  }\n\n  /**\n   *\n   * @type {String}\n   */\n  PatternLayout.TTCC_CONVERSION_PATTERN = '%r %p %c - %m%n';\n\n  /**\n   *\n   * @type {String}\n   */\n  PatternLayout.DEFAULT_CONVERSION_PATTERN = '%m%n';\n\n  /**\n   *\n   * @type {String}\n   */\n  PatternLayout.ISO8601_DATEFORMAT = 'yyyy-MM-dd HH:mm:ss,SSS';\n\n  /**\n   *\n   * @type {String}\n   */\n  PatternLayout.DATETIME_DATEFORMAT = 'dd MMM yyyy HH:mm:ss,SSS';\n\n  /**\n   *\n   * @type {String}\n   */\n  PatternLayout.ABSOLUTETIME_DATEFORMAT = 'HH:mm:ss,SSS';\n\n  /**\n   *\n   * @type {Layout}\n   */\n  PatternLayout.prototype = new log4js.Layout();\n\n  /**\n   *\n   * @param loggingEvent\n   * @returns {String}\n   */\n  PatternLayout.prototype.format = function (loggingEvent) {\n    var regex = /%(-?[0-9]+)?(\\.?[0-9]+)?([acdflmMnpr%])(\\{([^\\}]+)\\})?|([^%]+)/;\n    var formattedString = '';\n    var result;\n    var searchString = this.pattern;\n\n    // Cannot use regex global flag since it doesn't work with exec in IE5\n    while ((result = regex.exec(searchString))) {\n      var matchedString = result[0];\n      var padding = result[1];\n      var truncation = result[2];\n      var conversionCharacter = result[3];\n      var specifier = result[5];\n      var text = result[6];\n\n      // Check if the pattern matched was just normal text\n      if (text) {\n        formattedString += '' + text;\n      } else {\n        // Create a raw replacement string based on the conversion\n        // character and specifier\n        var replacement = '';\n        switch (conversionCharacter) {\n        case 'l': //Location\n          var error = new Error();\n          if (error.stack) {\n            var column, line, resource, funcBegin, resourceBegin;\n            var stack = error.stack;\n            var lineAccessingLogger = stack.split('\\n')[8];\n\n            if (lineAccessingLogger === '') {\n              var lastIndexOfAt = stack.lastIndexOf('@');\n              lineAccessingLogger = stack.substr(lastIndexOfAt);\n              funcBegin = 0;\n              resourceBegin = lineAccessingLogger.indexOf('@') + 1;\n            } else {\n              funcBegin = lineAccessingLogger.indexOf('at ') + 3;\n              resourceBegin = lineAccessingLogger.indexOf(' (') + 2;\n            }\n\n            var functionName = funcBegin < resourceBegin ? lineAccessingLogger.substring(funcBegin, resourceBegin - 2) : null;\n\n            var resourceLoc;\n            if (functionName) {\n              resourceLoc = lineAccessingLogger.substring(resourceBegin, lineAccessingLogger.length - 1);\n            } else {\n              functionName = '(anonymous)';\n              resourceLoc = lineAccessingLogger.substring(funcBegin);\n            }\n\n            var resourceLocSplit = resourceLoc.split(':');\n            column = resourceLocSplit.pop();\n            line = resourceLocSplit.pop();\n            if (isNaN(line)) {\n              resourceLocSplit.push(line);\n              resource = resourceLocSplit.join(':');\n              if (resource.indexOf('@') === 0) {\n                resource = resource.substr(1);\n              }\n              line = column;\n              column = NaN;\n            } else {\n              resource = resourceLocSplit.join(':');\n            }\n            var lastSegmentIdx = resource.lastIndexOf('/');\n            var lastSegment = resource.substring(lastSegmentIdx + 1);\n\n            /*\n             var resultObject = {\n             r : resource,\n             l : line,\n             c : column,\n             f : functionName,\n             s : lastSegment\n             };\n             */\n\n            var spec = 's:l';\n            if (specifier) {\n              spec = specifier;\n            }\n\n            var specresult = [];\n            var priorNum = '';\n            var int;\n            for (int = 0; int < spec.length; int++) {\n              var l = spec[int];\n              var num = parseInt(l, 10);\n              if (num > -1) {\n                priorNum += l;\n              } else {\n                if (priorNum.length > 0) {\n                  specresult.push(parseInt(priorNum, 10));\n                  priorNum = '';\n                }\n                specresult.push(l);\n              }\n            }\n            if (priorNum.length > 0) {\n              specresult.push(parseInt(priorNum, 10));\n            }\n            spec = specresult;\n            for (int = 0; int < spec.length; int++) {\n              var optNum = spec[int + 1], string = '';\n              switch (spec[int]) {\n              case 's':\n                replacement += lastSegment;\n                break;\n              case 'r':\n                string = resource;\n                if (typeof optNum === 'number') {\n                  string = string.substring(string.length - optNum);\n                  spec.splice(int + 1, 1);\n                }\n                replacement += string;\n                break;\n              case 'l':\n                replacement += line;\n                break;\n              case 'c':\n                if (!isNaN(column)) {\n                  replacement += column;\n                } else {\n                  replacement = replacement.substring(0, replacement.lastIndexOf(spec[int - 1]));\n                }\n                break;\n              case 'f':\n                string = functionName;\n                if (typeof optNum === 'number') {\n                  string = string.substring(string.length - optNum);\n                  spec.splice(int + 1, 1);\n                }\n                replacement += string;\n                break;\n              default:\n                replacement += spec[int];\n              }\n            }\n          } else {\n            helper.handleError('Could not apply \"l\" pattern because no stack is available');\n          }\n          break;\n        case 'a': // Array of messages\n        case 'm': // Message\n          var depth = 0;\n          if (specifier) {\n            depth = parseInt(specifier, 10);\n            if (isNaN(depth)) {\n              helper.handleError('PatternLayout.format: invalid specifier \"' +\n                specifier + '\" for conversion character \"' + conversionCharacter +\n                '\" - should be a number');\n              depth = 0;\n            }\n          }\n          var messages = (conversionCharacter === 'a') ? loggingEvent.messages[0] : loggingEvent.messages;\n          for (var i = 0, len = messages.length; i < len; i++) {\n            if (i > 0 && (replacement.charAt(replacement.length - 1) !== ' ')) {\n              replacement += ' ';\n            }\n            if (depth === 0) {\n              replacement += messages[i];\n            } else {\n              replacement += JSON.stringify(messages[i], null, 2);\n            }\n          }\n          break;\n        case 'c': // Logger name\n          var loggerName = loggingEvent.logger.name;\n          if (specifier) {\n            var precision = parseInt(specifier, 10);\n            var loggerNameBits = loggingEvent.logger.name.split('.');\n            if (precision >= loggerNameBits.length) {\n              replacement = loggerName;\n            } else {\n              replacement = loggerNameBits.slice(loggerNameBits.length - precision).join('.');\n            }\n          } else {\n            replacement = loggerName;\n          }\n          break;\n        case 'd': // Date\n          var dateFormat = PatternLayout.ISO8601_DATEFORMAT;\n          if (specifier) {\n            dateFormat = specifier;\n            // Pick up special cases\n            if (dateFormat === 'ISO8601') {\n              dateFormat = PatternLayout.ISO8601_DATEFORMAT;\n            } else if (dateFormat === 'ABSOLUTE') {\n              dateFormat = PatternLayout.ABSOLUTETIME_DATEFORMAT;\n            } else if (dateFormat === 'DATE') {\n              dateFormat = PatternLayout.DATETIME_DATEFORMAT;\n            }\n          }\n          // Format the date\n          replacement = (new log4js.SimpleDateFormat(dateFormat)).format(loggingEvent.timeStamp);\n          break;\n        case 'f': // Custom field\n          if (this.hasCustomFields()) {\n            var fieldIndex = 0;\n            if (specifier) {\n              fieldIndex = parseInt(specifier, 10);\n              if (isNaN(fieldIndex)) {\n                helper.handleError('PatternLayout.format: invalid specifier \"' +\n                  specifier + '\" for conversion character \"f\" - should be a number');\n              } else if (fieldIndex === 0) {\n                helper.handleError('PatternLayout.format: invalid specifier \"' +\n                  specifier + '\" for conversion character \"f\" - must be greater than zero');\n              } else if (fieldIndex > this.customFields.length) {\n                helper.handleError('PatternLayout.format: invalid specifier \"' +\n                  specifier + '\" for conversion character \"f\" - there aren\\'t that many custom fields');\n              } else {\n                fieldIndex = fieldIndex - 1;\n              }\n            }\n            var val = this.customFields[fieldIndex].value;\n            if (typeof val === 'function') {\n              val = val(this, loggingEvent);\n            }\n            replacement = val;\n          }\n          break;\n        case 'n': // New line\n          replacement = helper.newLine;\n          break;\n        case 'p': // Level\n          replacement = loggingEvent.level.name;\n          break;\n        case 'r': // Milliseconds since log4javascript startup\n          replacement = '' + loggingEvent.timeStamp.getDifference(log4js.applicationStartDate);\n          break;\n        case '%': // Literal % sign\n          replacement = '%';\n          break;\n        default:\n          replacement = matchedString;\n          break;\n        }\n        // Format the replacement according to any padding or\n        // truncation specified\n        var length;\n\n        // First, truncation\n        if (truncation) {\n          length = parseInt(truncation.substr(1), 10);\n          var strLen = replacement.length;\n          if (length < strLen) {\n            replacement = replacement.substring(strLen - length, strLen);\n          }\n        }\n        // Next, padding\n        if (padding) {\n          if (padding.charAt(0) === '-') {\n            length = parseInt(padding.substr(1), 10);\n            // Right pad with spaces\n            while (replacement.length < length) {\n              replacement += ' ';\n            }\n          } else {\n            length = parseInt(padding, 10);\n            // Left pad with spaces\n            while (replacement.length < length) {\n              replacement = ' ' + replacement;\n            }\n          }\n        }\n        formattedString += replacement;\n      }\n      searchString = searchString.substr(result.index + result[0].length);\n    }\n    return formattedString;\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  PatternLayout.prototype.ignoresThrowable = function () {\n    return true;\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  PatternLayout.prototype.toString = function () {\n    return 'PatternLayout';\n  };\n\n  log4js.PatternLayout = PatternLayout;\n\n});\n\n","define('log4js.appender',[\n  'log4js.helper',\n  'log4js.core',\n  'log4js.eventSupport',\n  'log4js.layout.pattern'\n], function (helper, log4js, EventSupport) {\n  'use strict';\n\n  /**\n   *\n   * @constructor\n   * @mixin\n   */\n  var Appender = function () {\n  };\n\n  /**\n   *\n   * @type {EventSupport}\n   */\n  Appender.prototype = new EventSupport();\n\n  /**\n   *\n   * @type {PatternLayout}\n   */\n  Appender.prototype.layout = new log4js.PatternLayout();\n\n  /**\n   *\n   * @type {Level}\n   */\n  Appender.prototype.threshold = log4js.Level.ALL;\n\n  /**\n   *\n   * @type {Array}\n   */\n  Appender.prototype.loggers = [];\n\n  /**\n   * Performs threshold checks before delegating actual logging to the\n   * subclass's specific append method.\n   * @param {LoggingEvent} loggingEvent\n   */\n  Appender.prototype.doAppend = function (loggingEvent) {\n    if (log4js.enabled && loggingEvent.level.level >= this.threshold.level) {\n      this.append(loggingEvent);\n    }\n  };\n\n  /**\n   *\n   * @param {LoggingEvent} loggingEvent\n   */\n  /*jshint unused:false*/\n  Appender.prototype.append = function (loggingEvent) {\n  };\n\n  /**\n   *\n   * @param {Layout} layout\n   */\n  Appender.prototype.setLayout = function (layout) {\n    if (layout instanceof log4js.Layout) {\n      this.layout = layout;\n    } else {\n      helper.handleError('Appender.setLayout: layout supplied to ' +\n        this.toString() + ' is not a subclass of Layout');\n    }\n  };\n\n  /**\n   *\n   * @returns {Layout}\n   */\n  Appender.prototype.getLayout = function () {\n    return this.layout;\n  };\n\n  /**\n   *\n   * @param {Level} threshold\n   */\n  Appender.prototype.setThreshold = function (threshold) {\n    if (threshold instanceof log4js.Level) {\n      this.threshold = threshold;\n    } else {\n      helper.handleError('Appender.setThreshold: threshold supplied to ' +\n        this.toString() + ' is not a subclass of Level');\n    }\n  };\n\n  /**\n   *\n   * @returns {Level}\n   */\n  Appender.prototype.getThreshold = function () {\n    return this.threshold;\n  };\n\n  /**\n   *\n   * @param {Logger} logger\n   */\n  Appender.prototype.setAddedToLogger = function (logger) {\n    this.loggers.push(logger);\n  };\n\n  /**\n   *\n   * @param {Logger} logger\n   */\n  Appender.prototype.setRemovedFromLogger = function (logger) {\n    helper.arrayRemove(this.loggers, logger);\n  };\n\n  /**\n   *\n   * @type {emptyFunction}\n   */\n  Appender.prototype.group = function(){};\n\n  /**\n   *\n   * @type {emptyFunction}\n   */\n  Appender.prototype.groupEnd = function(){};\n\n  /**\n   * @todo document document document\n   */\n  Appender.prototype.toString = function () {\n    helper.handleError('Appender.toString: all appenders must override this method');\n  };\n\n  log4js.Appender = Appender;\n\n});\n\n","define('log4js.layout.null',['log4js.core', 'log4js.layout'], function (log4js) {\n  'use strict';\n\n  /**\n   * NullLayout\n   * @constructor\n   * @mixes Layout\n   */\n  function NullLayout() {\n    this.customFields = [];\n  }\n\n  /**\n   *\n   * @type {Layout}\n   */\n  NullLayout.prototype = new log4js.Layout();\n\n  /**\n   *\n   * @param loggingEvent\n   * @returns {Array}\n   */\n  NullLayout.prototype.format = function (loggingEvent) {\n    return loggingEvent.messages;\n  };\n\n  /**\n   *\n   * @returns {Boolean}\n   */\n  NullLayout.prototype.ignoresThrowable = function () {\n    return true;\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  NullLayout.prototype.toString = function () {\n    return 'NullLayout';\n  };\n\n  log4js.NullLayout = NullLayout;\n});\n\n","/*global window*/\ndefine('log4js.appender.browserConsole',['log4js.core', 'log4js.appender', 'log4js.layout.null'], function (log4js) {\n  'use strict';\n\n  /**\n   * BrowserConsoleAppender (works in Opera, Safari, Firefox, Firefox with\n   * Firebug extension and Chrome)\n   * @constructor\n   * @mixes Appender\n   */\n  function BrowserConsoleAppender() {\n  }\n\n  /**\n   *\n   * @type {Appender}\n   */\n  BrowserConsoleAppender.prototype = new log4js.Appender();\n\n  /**\n   *\n   * @type {Layout}\n   */\n  BrowserConsoleAppender.prototype.layout = new log4js.NullLayout();\n\n  /**\n   *\n   * @type {Level}\n   */\n  BrowserConsoleAppender.prototype.threshold = log4js.Level.DEBUG;\n\n  /**\n   *\n   * @param loggingEvent\n   */\n  BrowserConsoleAppender.prototype.append = function (loggingEvent) {\n    var appender = this;\n\n    var getFormattedMessage = function () {\n      var layout = appender.getLayout();\n      var formattedMessage = layout.format(loggingEvent);\n      if (layout.ignoresThrowable() && loggingEvent.exception) {\n        formattedMessage += loggingEvent.getThrowableStrRep();\n      }\n      return formattedMessage;\n    };\n\n    if (window.console && window.console.log) {\n      var formattedMesage = getFormattedMessage();\n      if (window.console.debug && log4js.Level.DEBUG.isGreaterOrEqual(loggingEvent.level)) {\n        window.console.debug(formattedMesage);\n      } else if (window.console.info && log4js.Level.INFO.equals(loggingEvent.level)) {\n        window.console.info(formattedMesage);\n      } else if (window.console.warn && log4js.Level.WARN.equals(loggingEvent.level)) {\n        window.console.warn(formattedMesage);\n      } else if (window.console.error && loggingEvent.level.isGreaterOrEqual(log4js.Level.ERROR)) {\n        window.console.error(formattedMesage);\n      } else {\n        window.console.log(formattedMesage);\n      }\n    }\n  };\n\n  /**\n   *\n   * @param {String} name\n   */\n  BrowserConsoleAppender.prototype.group = function (name) {\n    if (window.console && window.console.group) {\n      window.console.group(name);\n    }\n  };\n\n  /**\n   * @todo document\n   */\n  BrowserConsoleAppender.prototype.groupEnd = function () {\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  };\n\n  /**\n   *\n   * @returns {String}\n   */\n  BrowserConsoleAppender.prototype.toString = function () {\n    return 'BrowserConsoleAppender';\n  };\n\n  /**\n   *\n   * @type {BrowserConsoleAppender}\n   */\n  log4js.BrowserConsoleAppender = BrowserConsoleAppender;\n});\n","define('log4js.part.browserConsole',['log4js.core', 'log4js.appender.browserConsole'], function(log4js){\n  'use strict';\n  return log4js;\n});\n\n"]}